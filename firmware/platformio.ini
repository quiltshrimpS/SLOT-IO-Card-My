; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[env:nanoatmega328]
platform = atmelavr
board = nanoatmega328
framework = arduino
;  - TIMEOUT_NACK:
;      some commands requires an NACK, but we don't want to block the whole
;      system just for waiting an NACK to timeout.
;      thus, we don't use the ACK functions provided by CmdMessenger, and have
;      our own.
;      time unit is in us.
;  - DEBOUNCE_TIMEOUT:
;      observed behavior is that we might get boucing gaps for around 2000us ~
;      2500us, so debounce it at 5000us.
;      the debounce algorithm acts as a time invariant software RC schmitt
;      trigger, the TIMEOUT actually desides how much "energy" it has to gain
;      or lose before its considered a low or high.
;  - COUNTER_PULSE_DUTY_HIGH / COUNTER_PULSE_DUTY_LOW:
;      counter is 150 CPS, each cycle is 6666.66us, 50% duty = 3333.33us HIGH
;      followed by 3333.33us LOW. thus we round it to 3500us.
;  - TWI_BAUDRATE:
;      the FRAM (MB85RC16V) is capable of driving baudrates up to 1Mhz.
;      however the AVR datasheet indicates that TWI baudrate is calculated with
;      the following formula:
;        TWI_FREQ = F_CPU / (2 * TWBR + 16)
;      the datasheet set minimum TWBR to 2, so we give it 800Khz to get TWBR = 2.
;      see also: http://www.atmel.com/ru/ru/Images/Atmel-2564-Using-the-TWI-Module-as-I2C-Master_ApplicationNote_AVR315.pdf
;  - UART_BAUDRATE:
;      check http://wormfood.net/avrbaudcalc.php for 16Mhz avr
;      choose a baudrate with error < 3%, that is:
;        - 57600, 76800, 115200, 250000, 500000, 1000000
;      500k and 1M are really pushing the hardware to its limit, its hard to
;      feed the FIFO buffer fast enough.
;      250k is choosen for because its error-free (0%!) and still leaves
;      reasonable amount of time to populate the FIFO.
;  - SERIAL_DEBUG:
;      defines to 0 to mute the FRAM lib.
;  - DEBUG_SERIAL:
;      undef to mute the `Configuration` class.
build_flags = "-DTIMEOUT_NACK=50000L" "-DDEBOUNCE_TIMEOUT=5000" "-DCOUNTER_PULSE_DUTY_HIGH=3500" "-DCOUNTER_PULSE_DUTY_LOW=3500" "-DTWI_BAUDRATE=800000L" "-DUART_BAUDRATE=250000L" "-DSERIAL_DEBUG=0" ; "-DDEBUG_SERIAL=Serial"
